@model Soulstice.DATA.EF.Instructor

@{
    ViewBag.Title = "Add New Instructor";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="contentContainer">
        <div id="editContainer">
            <h2 class="text-center">@ViewBag.Title</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "control-label mt-15" })
                <div class=" col-md-12">

                    @Html.EditorFor(model => model.Specialty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <p id="footerLeft">  @Html.ActionLink("Back to Instructors", "Index")</p>
                <p id="footerRight"> <input type="submit" value="Add" class="btn btn-default" /></p>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
