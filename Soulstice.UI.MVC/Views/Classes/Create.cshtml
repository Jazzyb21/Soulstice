@model Soulstice.DATA.EF.Class

@{
    ViewBag.Title = "Add New Class";
}

@*<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Class</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InstructorID, "InstructorID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("InstructorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InstructorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReservationLimit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReservationLimit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReservationLimit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WeekDayID, "WeekDayID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("WeekDayID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WeekDayID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="contentContainer">
        <div id="editContainer">
            <h2 class="text-center">@ViewBag.Title</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row form-group">


                <div class="col-md-4">
                    @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row form-group">
                <div class="offset-4 col-md-4">
                    @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="row form-group">
                <div class="offset-4 col-md-4">
                    @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="row form-group">
                <div class="offset-4 col-md-4">

                    @Html.DropDownList("WeekDayID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.WeekDayID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="offset-4 col-md-4">

                    @Html.DropDownList("InstructorID", null, "Instructor", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InstructorID, "", new { @class = "text-danger" })
                </div>

            </div>


            <div class="form-group">
                <p id="footerLeft">  @Html.ActionLink("Back to Classes", "Index")</p>
                <p id="footerRight"> <input type="submit" value="Add" class="btn btn-default" /></p>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
}
